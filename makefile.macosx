CFLAGS = -fPIC -Dlint -DSTDC_HEADERS -Wall -D__macosx -single_module \
         $(CDEBUGFLAGS) $(CFLAGS1)

LDFLAGS_AUDIO = -framework CoreAudio -framework AudioToolbox \
                -framework AudioUnit -framework CoreServices

LDFLAGS = -fPIC -fno-common -dynamiclib -single_module 

CDEBUGFLAGS = -O3 
CFLAGS1     = -Iinclude -Ilibmp3lame -Impglib -single_module $(INCLUDEMAD)
INCLUDEMAD  = -Imad/include
SUDOADMIN   =  cat /etc/sudopwd | sudo -S -u admin

# Enable these for debugging and Electric Fence memory debugging
CDEBUGFLAGS = -g 
#EFENCE      = -lefence
LIBS        = -L. -lmpgeditlib
LIBMAD      = -Lmad/linux -lmad

MPEGDECODER        = -Lmpglib -lmpglib_mpgedit
MPEGDECODER_STATIC = -Lmpglib -lmpglib

all: mkbuildnum libmpgeditlib.a libmpgedit.dylib subdirs mpgedit \
     mpgedit_nocurses mp3_time \
     tstheader  mp3_vbrpatch \
     libdecoder_popen.dylib libdecoder_mpg123.dylib libdecoder_mad.dylib \
     install_shlibs editif_test play gui_dir

packages: mpgedit_pkg.dmg xmpgedit.dmg xmpgedit_gtk_pkg.dmg

NEWS.sedit: NEWS
	./mk_install_resources_readme.sh

README.sedit: README
	./mk_install_resources_license.sh

# mpgedit command-line installer.  This disk image package installs
# mpgedit.app, which does run launch curses mpgedit in a Terminal.app,
# but the main reason for this package is to install the command-line
# mpgedit package.
#
mpgedit_pkg.dmg: mpgedit NEWS.sedit README.sedit
	$(SUDOADMIN) ./dist_mpgedit_pkg_dmg.sh

# xmpgedit disk image.  Requires Fink GTK+2 be installed on your system
#
xmpgedit.dmg: gui/xmpgedit
	$(SUDOADMIN) ./dist_xmpgedit_dmg.sh

# xmpgedit disk image installer.  This package includes dependent GTK+2 
# libraries, and installs them under the xmpgedit.app install directory.
#
xmpgedit_gtk_pkg.dmg: gui/xmpgedit
	$(SUDOADMIN) ./dist_xmpgedit_gtk_pkg.sh

install:
	./install.sh

uninstall:
	./install.sh -u

mpgeditlib_objs = editif.o playif.o volumeif.o plugin_unix.o \
                  decoder.o mpegfio.o header.o xing_header.o \
                  xingedit.o mpegindx.o mp3time.o mpegstat.o pcmlevel.o \
                  segment.o md5lib/md5.o

mp3_header_objs = mp3_header.o wav16.o

mp3_time_objs   = mp3_time.o $(mpgeditlib_objs)

vbr_objs        = vbr_patch.o $(mpgeditlib_objs)

mpeg_indx_objs  = mpeg_indx.o mpegindx.o mpegfio.o header.o \
                  mp3time.o xing_header.o editif.o mpegstat.o

curses_obj      = mpegcurses.o mpgsleep.o cursutil.o parsename.o
nocurses_obj    = cursesstub.o

editif_objs     = editif_test.o $(mpgeditlib_objs)

libmpgeditlib.a: $(mpgeditlib_objs)
	ar ruv libmpgeditlib.a $(mpgeditlib_objs)
	ranlib libmpgeditlib.a

libmpgedit.dylib: $(mpgeditlib_objs)
	$(CC) $(LDFLAGS) -o libmpgedit.dylib $(mpgeditlib_objs)

subdirs:
	(cd mpglib; make -f makefile.macosx)
	(cd md5lib; make -f makefile.macosx)
	(cd mad/linux;    [ -f makefile ] || \
	    ln -s ../src/makefile.macosx makefile; make)
	(cd mad/win32;    [ -f makefile ] || \
	    ln -s ../src/makefile.win32 makefile)
	(cd mad/include;  [ -f mad.h ]    || ln -s ../src/mad.h mad.h)

gui_dir:
	(cd gui; make -f makefile.macosx)

mkbuildnum: mkbuildnum.o
	$(CC) -o $@ mkbuildnum.o

mpgedit_buildnum.h:
	./mkbuildnum MacOSX > mpgedit_buildnum.h

mpgedit: $(mp3_header_objs) $(curses_obj) libmpgedit.dylib
	$(CC) -o $@ $(mp3_header_objs) $(curses_obj) $(LIBS) -lncurses -ldl $(EFENCE)

dlopen: dlopen.o
	$(CC) -o $@ dlopen.o -ldl 

mpgedit_nocurses: $(mp3_header_objs)   $(nocurses_obj)
	$(CC) -o $@ $(mp3_header_objs) -L. -lmpgeditlib $(nocurses_obj) -ldl

tstheader: tstheader.o header.o
	$(CC) -o $@ tstheader.o header.o

mp3_time: $(mp3_time_objs)
	$(CC) -o $@ $(mp3_time_objs) -ldl

mp3_vbrpatch: $(vbr_objs)
	$(CC) -o $@ $(vbr_objs)

editif_test: $(editif_objs)
	$(CC) -o $@ $(editif_objs) $(EFENCE) -ldl

#mpeg_indx: $(mpeg_indx_objs)
#	$(CC) -o $@ $(mpeg_indx_objs)

curs: curs.o
	$(CC) -o $@ curs.o -lncurses

mpgsleep_main.o: mpgsleep.c
	$(CC) $(CFLAGS) -D_UNIT_TEST -c mpgsleep.c -o mpgsleep_main.o

mpgsleep: mpgsleep.o
	$(CC) -o $@ mpgsleep.o

libdecoder_popen.dylib: decoder_public.o
	$(CC) $(LDFLAGS) -o libdecoder_popen.dylib decoder_public.o

decoder_public.o: decoder.c
	$(CC) $(CFLAGS) -D_NO_STATIC -c decoder.c -o decoder_public.o

play: play.o
	$(CC) -o $@ play.o -L. -lmpgeditlib  -ldl

#zzz
simple_play: simple_play.o  libmpgeditlib.a
	$(CC) -o $@ simple_play.o -L. -lmpgeditlib  -ldl


TSIZE_OBJS = tsize.o playif.o editif.o plugin_unix.o decoder.o mpegfio.o \
             header.o xing_header.o mpegindx.o mp3time.o
tsize: $(TSIZE_OBJS)
	$(CC) -o $@ $(TSIZE_OBJS) -ldl

libdecoder_mpg123.dylib: decoder_mpg123.o audio.o
	$(CC) $(LDFLAGS) $(LDFLAGS_AUDIO) -o libdecoder_mpg123.dylib decoder_mpg123.o audio.o $(MPEGDECODER_STATIC)

libdecoder_mad.dylib: decoder_mad.o audio.o mad/linux/libmad.a
	$(CC) $(LDFLAGS) $(LDFLAGS_AUDIO) -o libdecoder_mad.dylib decoder_mad.o audio.o $(LIBMAD)


install_shlibs:
	[ -f libmpglib_mpgedit.dylib ] || rm -f libmpglib_mpgedit.dylib
	[ -f libmpglib_mpgedit.dylib ] || ln -s mpglib/libmpglib_mpgedit.dylib libmpglib_mpgedit.dylib
	[ -f libmpgedit_decoder.dylib ] || rm -f libmpgedit_decoder.dylib
	[ -f libmpgedit_decoder.dylib ] || ln -s libdecoder_mpg123.dylib libmpgedit_decoder.dylib
	chmod +x mp3decoder.sh


subdirs_clean:
	(cd md5lib; make -f makefile.macosx clean)
	(cd mad/linux; make -f makefile     clean)
	(cd mpglib; make -f makefile.macosx clean)
	(cd gui; make -f makefile.macosx    clean)

installer_clean:
	(cd macosx_installer; $(SUDOADMIN) rm -rf MPGEDIT.pkg)
	(cd macosx_installer; $(SUDOADMIN) rm -rf XMPGEDIT_GTK.pkg)
	(cd macosx_installer; $(SUDOADMIN) rm -rf mpgedit_pkgroot)
	(cd macosx_installer; $(SUDOADMIN) rm -rf xmpgedit_pkgroot)

audio.o:          audio_macosx.c
version.h:        mpgedit_buildnum.h
decoder.o:        decoder.h
decoder_mpg123.o: mpglib/interface.h decoder.h audio.h portability.h
header.o:         header.h
mp3_header.o:     portability.h header.h mp3time.h mpegindx.h xing_header.h \
                  mpegfio.h mp3_header.h mpegcurses.h decoder.h plugin.h    \
                  editif.h playif.h volumeif.h mpegstat.h version.h mpgedit_buildnum.h

mp3_time.o:       mp3time.h header.h mp3time.h header.h mpegfio.h
mpeg_indx.o:      mpegindx.h
mpegcurses.o:     portability.h mp3time.h mp3_header.h mpegcurses.h cursutil.h
mpegfio.o:        mpegfio.h header.h
mpegindx.o:       portability.h mpegfio.h header.h mp3time.h mp3_header.h \
                  xing_header.h editif.h
plugin_unix.o:    portability.h decoder.h
tstheader.o:      header.h
vbr_patch.o:      xing_header.h mpegfio.h header.h
xing_header.o:    xing_header.h mpgedit_buildnum.h
editif.o:         editif.h portability.h mp3_header.h mp3time.h \
                  xing_header.h mpegfio.h mpegindx.h mpegstat.h p_playif.h

playif.o:         editif.h portability.h header.h mp3time.h mpegindx.h \
                  xing_header.h mpegfio.h mp3_header.h mpegcurses.h decoder.h \
                  plugin.h version.h p_playif.h editif.h

editif_test.o:    editif.h
cursutil.o:       cursutil.h portability.h playif.h editif.h  \
                  mp3_header.h mpegindx.h


clean: subdirs_clean installer_clean
	rm -f mp3_time mpeg_indx tstheader mp3_vbrpatch $(mp3_header_objs) \
        mp3_time.o  mpeg_indx.o  tstheader.o  vbr_patch.o $(curses_obj)    \
        $(nocurses_obj) mpgedit mpgedit_nocurses libdecoder_popen.dylib \
        libdecoder_mpg123.dylib libdecoder_mad.dylib decoder.o \
        decoder_mpg123.o decoder_public.o decoder_mad.o readframes.o \
        readframes1.o readheader.o \
        curs.o curs libmpgedit_decoder.dylib libmpglib_mpgedit.dylib audio.o \
        mpgedit_buildnum.h mkbuildnum mkbuildnum.o \
        editif_test.o editif_test play tsize play.o tsize.o \
        libmpgedit.dylib libmpgeditlib.a $(mpgeditlib_objs) \
        mpgedit_pkg.dmg xmpgedit_0-73dev1.dmg mpgedit_pkg_0-73dev1.dmg \
        xmpgedit_gtk_pkg.dmg xmpgedit.dmg xmpgedit_gtk_pkg_0-73dev1.dmg \
        .install.sh


cursesstub.c:mp3time.h mp3_header.h mpegcurses.h
