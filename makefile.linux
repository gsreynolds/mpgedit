#ALSA_ macros defined as needed here
#
include alsa.def

CFLAGS = -fPIC -Dlint -DSTDC_HEADERS -Wall $(CDEBUGFLAGS) $(CFLAGS1) $(OSS_OPTIONS)

CDEBUGFLAGS = -O3 
CFLAGS1     = -Iinclude -Ilibmp3lame -Impglib $(INCLUDEMAD)

# Enable these for debugging and Electric Fence memory debugging
# CDEBUGFLAGS = -g 
# EFENCE      = -lefence
LIBS        = -L. -lmpgeditlib -ldl
#LIBMAD      = -Lmad/linux -lmad
#INCLUDEMAD  = -Imad/include

MPEGDECODER = -Lmpglib -lmpglib_mpgedit
MPEGDECODERSTATIC = -Lmpglib -lmpglib_static

all: mkbuildnum libmpgeditlib.a libmpgedit.so subdirs mpgedit \
     mpgedit_nocurses mp3_time \
     tstheader  mp3_vbrpatch \
     libdecoder_popen.so libdecoder_mpg123.so libdecoder_mad.so install_shlibs \
     editif_test play gui_dir python_dir readheader readframes readframes1

source_package:
	./dist_src.sh

# Can't easily add target names for this rule, since the
# targets are versioned.
#
rpm_package:
	cat /etc/sudo_number6pwd | sudo -S -u root ./dist_rpm.sh 0

install:
	./install.sh

uninstall:
	./install.sh -u

install_sdk:
	./install_sdk.sh

uninstall_sdk:
	./install_sdk.sh -u

mpgeditlib_objs = editif.o playif.o volumeif.o plugin_unix.o \
                  decoder.o mpegfio.o header.o xing_header.o \
                  xingedit.o mpegindx.o mp3time.o mpegstat.o pcmlevel.o \
                  segment.o md5lib/md5.o

mp3_header_objs = mp3_header.o  wav16.o

mp3_time_objs   = mp3_time.o $(mpgeditlib_objs)
#mp3time.o header.o mpegfio.o xing_header.o mpegstat.o editif.o

vbr_objs        = vbr_patch.o $(mpgeditlib_objs)

mpeg_indx_objs  = mpeg_indx.o mpegindx.o mpegfio.o header.o \
                  mp3time.o xing_header.o editif.o mpegstat.o

curses_obj      = mpegcurses.o mpgsleep.o cursutil.o parsename.o
nocurses_obj    = cursesstub.o

editif_objs     = editif_test.o $(mpgeditlib_objs)

libmpgeditlib.a: $(mpgeditlib_objs)
	ar ruv libmpgeditlib.a $(mpgeditlib_objs)

libmpgedit.so: $(mpgeditlib_objs)
	$(CC) -fPIC -rdynamic -shared -o libmpgedit.so $(mpgeditlib_objs)

subdirs:
	(cd mpglib; make -f makefile.linux)
	(cd md5lib; make -f makefile.linux)
	(cd mad/linux;    [ -f makefile ] || \
            ln -s ../src/makefile.linux makefile; make)
	(cd mad/win32;    [ -f makefile ] || \
            ln -s ../src/makefile.win32 makefile)
	(cd mad/include;  [ -f mad.h ]    || ln -s ../src/mad.h mad.h)

gui_dir:
	(cd gui; make -f makefile.linux)

python_dir:
	(cd contrib/python/py_mpgedit; make -f makefile.linux)

mkbuildnum: mkbuildnum.o
	$(CC) -o $@ mkbuildnum.o

mpgedit_buildnum.h: mkbuildnum
	./mkbuildnum Linux > mpgedit_buildnum.h

mpgedit: $(mp3_header_objs) $(curses_obj) libmpgedit.so
	$(CC) -o $@ $(mp3_header_objs) $(curses_obj) $(LIBS) -lncurses  $(EFENCE)

dlopen: dlopen.o
	$(CC) -o $@ dlopen.o -ldl 

mpgedit_nocurses: $(mp3_header_objs)   $(nocurses_obj)
	$(CC) -o $@ $(mp3_header_objs) $(LIBS) $(nocurses_obj)

tstheader: tstheader.o header.o
	$(CC) -o $@ tstheader.o header.o

readheader: readheader.o header.o
	$(CC) -o $@ readheader.o $(LIBS)

readframes: readframes.o header.o
	$(CC) -o $@ readframes.o $(LIBS)

readframes1: readframes1.o header.o
	$(CC) -o $@ readframes1.o $(LIBS) $(LIBMAD)

mp3_time: $(mp3_time_objs)
	$(CC) -o $@ $(mp3_time_objs) -ldl

mp3_vbrpatch: $(vbr_objs)
	$(CC) -o $@ $(vbr_objs) -ldl

vbrmodify: vbrmodify.o
	$(CC) -o vbrmodify vbrmodify.o $(LIBS) -ldl

editif_test: $(editif_objs)
	$(CC) -o $@ $(editif_objs) $(EFENCE) -ldl

#mpeg_indx: $(mpeg_indx_objs)
#	$(CC) -o $@ $(mpeg_indx_objs)

curs: curs.o
	$(CC) -o $@ curs.o -lncurses

mpgsleep_main.o: mpgsleep.c
	$(CC) $(CFLAGS) -D_UNIT_TEST -c mpgsleep.c -o mpgsleep_main.o

mpgsleep: mpgsleep.o
	$(CC) -o $@ mpgsleep.o

libdecoder_popen.so: decoder_public.o
	$(CC) -fPIC -rdynamic -shared -o libdecoder_popen.so decoder_public.o

decoder_public.o: decoder.c
	$(CC) $(CFLAGS) -D_NO_STATIC -c decoder.c -o decoder_public.o

play: play.o
	$(CC) -o $@ play.o $(LIBS)

readlvl: readlvl.o
	$(CC) -o $@ readlvl.o -L. -lmpgeditlib  -ldl

simple_play: simple_play.o  libmpgeditlib.a
	$(CC) -o $@ simple_play.o $(LIBS)


TSIZE_OBJS = tsize.o playif.o editif.o plugin_unix.o decoder.o mpegfio.o \
             header.o xing_header.o mpegstat.o mpegindx.o mp3time.o
tsize: $(TSIZE_OBJS)
	$(CC) -o $@ $(TSIZE_OBJS) -ldl

ints: ints.o xing_header.o mpegstat.o
	$(CC) -o $@ ints.o xing_header.o mpegstat.o

listlevels: listlevels.o libmpgeditlib.a
	$(CC) -o $@ listlevels.o -L. -lmpgeditlib

audio.o: audio.c
	$(CC) $(CFLAGS) $(ALSA_DEFINES) -c audio.c -o audio.o

decoder_mpg123.o: decoder_mpg123.c
	$(CC) $(CFLAGS) $(ALSA_DEFINES) -c decoder_mpg123.c -o decoder_mpg123.o

libdecoder_mpg123.so: decoder_mpg123.o audio.o mpglib/libmpglib_mpgedit.so
	$(CC) -fPIC -rdynamic -shared $(ALSA_DEFINES) -o libdecoder_mpg123.so \
	  decoder_mpg123.o audio.o $(MPEGDECODER) $(ALSA_LIB)

decoder_mad.o: decoder_mad.c
	$(CC) $(CFLAGS) $(ALSA_DEFINES) -c decoder_mad.c -o decoder_mad.o

libdecoder_mad.so: decoder_mad.o audio.o mad/linux/libmad.a
	$(CC) -fPIC -rdynamic -shared $(ALSA_DEFINES) -o libdecoder_mad.so \
	  decoder_mad.o audio.o $(LIBMAD) $(ALSA_LIB)

install_shlibs:
	[ -f libmpglib_mpgedit.so ] || rm -f libmpglib_mpgedit.so
	[ -f libmpglib_mpgedit.so ] || ln -s mpglib/libmpglib_mpgedit.so libmpglib_mpgedit.so
	[ -f libmpgedit_decoder.so ] || rm -f libmpgedit_decoder.so
	[ -f libmpgedit_decoder.so ] || ln -s libdecoder_mpg123.so libmpgedit_decoder.so
	-chmod -f +x mp3decoder.sh


subdirs_distclean:
	(cd md5lib;                       make -f makefile.linux distclean)
	(cd gui;                          make -f makefile.linux distclean)
	(cd contrib/python/py_mpgedit;    make -f makefile.linux distclean)

subdirs_clean:
	(cd md5lib; make -f makefile.linux clean)
	(cd mad/linux; make -f makefile    clean)
	(cd mpglib; make -f makefile.linux clean)
	(cd gui;    make -f makefile.linux clean)
	(cd contrib/python/py_mpgedit; make -f makefile.linux clean)


audio.o:          audio_aix.c audio_dummy.c audio_macosx.c audio_sun.c \
		  audio_alsa.c  audio_hp.c     audio_oss.c

version.h:        mpgedit_buildnum.h
decoder.o:        decoder.h
decoder_mpg123.o: mpglib/interface.h decoder.h audio.h portability.h
header.o:         header.h
mp3_header.o:     portability.h header.h mp3time.h mpegindx.h xing_header.h \
                  mpegfio.h mp3_header.h mpegcurses.h decoder.h plugin.h    \
                  editif.h playif.h volumeif.h mpegstat.h version.h         \
                  mpgedit_buildnum.h pcmlevel.h segment.h

mp3_time.o:       mp3time.h header.h mp3time.h header.h mpegfio.h
mpeg_indx.o:      mpegindx.h
mpegcurses.o:     portability.h mp3time.h mp3_header.h mpegcurses.h cursutil.h \
                  parsename.h
mpegfio.o:        mpegfio.h header.h
mpegindx.o:       portability.h mpegfio.h header.h mp3time.h mp3_header.h \
                  xing_header.h editif.h
plugin_unix.o:    portability.h decoder.h
tstheader.o:      header.h
vbr_patch.o:      xing_header.h mpegfio.h header.h
xing_header.o:    xing_header.h mpgedit_buildnum.h
editif.o:         editif.h portability.h mp3_header.h mp3time.h \
                  xing_header.h mpegfio.h mpegindx.h mpegstat.h p_playif.h

playif.o:         editif.h portability.h header.h mp3time.h mpegindx.h \
                  xing_header.h mpegfio.h mp3_header.h mpegcurses.h decoder.h \
                  plugin.h version.h p_playif.h editif.h

editif_test.o:    editif.h
cursutil.o:       cursutil.h portability.h playif.h editif.h  \
                  mp3_header.h mpegindx.h

listlevels.o:     pcmlevel.h segment.h

pcmlevel.o:       pcmlevel.h

segment.o:        portability.h mpegindx.h xing_header.h pcmlevel.h \
                  mp3time.h segment.h

distclean: subdirs_distclean
	$(RM) .install.sh *.spec.orig *-[0-9]*.spec *.rpm \
        mpgedit*.exe mpgedit*.tgz README README.txt README_SDK.linux \
	README_SDK_win32.txt README_win32_mpgedit.txt \
	README_win32_xmpgedit.txt mpgedit_installer.iss mpgedit_sdk.iss \
	../../mpgedit_[0-9]-*_src.tgz ../../mpgedit_[0-9]-*_src.exe
	$(RM) -r ../../mpgedit_[0-9]*_src
	make clean 

clean: subdirs_clean
	$(RM) mp3_time mpeg_indx tstheader mp3_vbrpatch $(mp3_header_objs) \
        mp3_time.o  mpeg_indx.o  tstheader.o  vbr_patch.o $(curses_obj)    \
        $(nocurses_obj) mpgedit mpgedit_nocurses libdecoder_popen.so \
        libdecoder_mpg123.so libdecoder_mad.so decoder.o decoder_mpg123.o \
        decoder_mad.o readframes.o readframes1.o readheader.o readheader \
        curs.o curs libmpgedit_decoder.so libmpglib_mpgedit.so audio.o \
        mpgedit_buildnum.h mkbuildnum mkbuildnum.o \
        editif_test.o editif_test play tsize play.o tsize.o \
        libmpgedit.so libmpgeditlib.a $(mpgeditlib_objs) simple_play.o \
        ints.o listlevels.o decoder_public.o readframes readframes1 \


cursesstub.c:mp3time.h mp3_header.h mpegcurses.h
